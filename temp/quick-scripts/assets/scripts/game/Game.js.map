{"version":3,"sources":["Game.js"],"names":["cc","Class","extends","Component","properties","master","default","type","Prefab","score","Label","playername","player","Node","timer","alert","palyOrPause","Button","scoreFlag","Number","prefabFlag","Boolean","timerFlag","initPlayBtn","playbtn","find","node","zIndex","initTimer","position_x","width","position_y","height","x","y","creatPrefab","newMaster","instantiate","addChild","getComponent","game","setPlayerName","localStorage","getItem","current_user","JSON","parse","nickname","profile","string","setScorePosition","setPosition","setScore","alert_node","active","setTimeout","isPlay","status","window","Global","gameIsPlay","setBtnPosition","dt","max_position_y","Math","ceil","init","on","onLoad","startGame","start","setInterval","update"],"mappings":"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","file":"Game.js","sourceRoot":"../../../../../assets/scripts/game","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        master: {\n            default: null,\n            type: cc.Prefab,\n        },\n        score: {\n            default: null,\n            type: cc.Label,\n        },\n        playername: {\n            default:null,\n            type: cc.Label,\n        },\n        player: {\n            default: null,\n            type: cc.Node,\n        },\n        timer: {\n            default:null,\n            type: cc.Label\n        },\n        alert: {\n            default: null,\n            type: cc.Label\n        },\n        palyOrPause: {\n            default: null,\n            type: cc.Button\n        },\n        scoreFlag: Number,\n        prefabFlag: Boolean,\n        timerFlag: Number,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n    initPlayBtn(){\n        let playbtn = cc.find('palyOrPause', this.node);\n        playbtn.zIndex = 2;\n    },\n    initTimer(){\n        let timer = cc.find('timer', this.node),\n            position_x = this.node.width/2 - timer.width/2,\n            position_y = this.node.height/2 - timer.height/2;  \n        timer.x = position_x;\n        timer.y = position_y;\n        timer.zIndex = 1;\n        this.timer = 'Timer: ';\n    },\n    creatPrefab(){\n            //new master\n            let newMaster = cc.instantiate(this.master);\n            //append master\n            this.node.addChild(newMaster);\n            //在master上暂存game 和 player\n            newMaster.getComponent('Master').game = this;\n            newMaster.getComponent('Master').player = this.player;\n            //make prefabFlag be false after a newMaster was created.\n            this.prefabFlag = false;\n    },\n    setPlayerName(){\n        //设置player 的名字\n        if(localStorage.getItem('current_user')){\n            let current_user =  JSON.parse(localStorage.getItem('current_user'));\n            let nickname = current_user.profile.nickname;\n            this.playername.string = nickname;\n        }else{\n            this.playername.string = 'Tourist';\n        }\n    },\n    setScorePosition(){\n        //设置计分器的位置\n        let width = this.node.width,\n            height = this.node.height,\n            score = cc.find('score', this.node);\n        score.setPosition(-width/2, height/2);\n        score.zIndex = 1;\n        this.score.string = 'Score: 0';\n    },\n    setScore(type){\n        //更新计分器\n        let alert = this.alert,\n            alert_node = cc.find('alert', this.node);\n        alert_node.active = true;\n        if(type == 'hotdog'){\n            this.scoreFlag++;\n            alert.string =  `+1`;\n        }else if(type == 'stone'){\n            this.scoreFlag--;\n            alert.string = `-1`;\n        }else{\n            this.scoreFlag -=2;\n            alert.string = `-2`;\n        };\n        let timer = setTimeout(()=>{\n            alert_node.active = false;\n        },500);\n        this.score.string = 'Score: ' + this.scoreFlag;\n    },\n    isPlay(){\n        let playbtn = cc.find('palyOrPause', this.node);\n        let status = cc.find('palyOrPause/status', this.node).getComponent(cc.Label);\n        window.Global.gameIsPlay = !window.Global.gameIsPlay;\n        this.prefabFlag = !this.prefabFlag;\n        status.string = window.Global.gameIsPlay?'Pause':'Play';\n    },\n    setBtnPosition(dt){\n        // set button position while game is playing or paused\n        let playbtn = cc.find('palyOrPause', this.node),\n            max_position_y = this.node.height/2 - playbtn.height/3;  \n        if(window.Global.gameIsPlay){\n            if(playbtn.y < max_position_y){\n                playbtn.y += Math.ceil(dt)*11;\n            }else if(playbtn.y >= max_position_y ){\n                playbtn.y = max_position_y;\n            };\n        }else{\n            if(playbtn.y > 0){\n                playbtn.y -= Math.ceil(dt)*11;\n            }else if(playbtn.y <= 0){\n                playbtn.y = 0;\n            };\n        }\n    },\n    init(){\n        //init socreFlag\n        this.scoreFlag = 0;\n        //init prefabFlag\n        this.prefabFlag = false;\n        //init the gameIsPlay of Global variable \n        window.Global.gameIsPlay = false;\n        //init alert zindex\n        cc.find('alert', this.node).zIndex = 1;\n        //init timer\n        this.initTimer();\n        // cc.find('timer', this.node).y = this.node.height/2 - cc.find('timer', this.node).height/2;\n        // cc.find('timer', this.node).zIndex = 1;\n        //init playbtn\n        this.initPlayBtn();\n        //init playername\n        this.setPlayerName();\n        //init score position\n        this.setScorePosition();\n        // bind click event for playbtn\n        this.palyOrPause.node.on('click', this.isPlay, this);\n    },\n    onLoad () {\n        //when load init somthing\n        this.init();\n    },\n    startGame(dt){\n        //create prefab while game is palying\n        if(window.Global.gameIsPlay && this.prefabFlag){\n            this.creatPrefab();\n        };\n    },\n    start () {\n        //let each prefab interval be 0.8-sec\n        setInterval(()=>{\n            this.prefabFlag = true;\n        },800);\n    },\n    update (dt) {\n        this.startGame();\n        this.setBtnPosition(dt);\n    },\n});\n"]}