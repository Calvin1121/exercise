{"version":3,"sources":["Login.js"],"names":["userService","require","cc","Class","extends","Component","properties","loginlayout","default","type","Node","error","Label","username","EditBox","password","status","Toggle","loginbtn","Button","initLogin","login","find","node","header","name","pasd","nameInput","pasdInput","agreement","agreedetail","buttons","loginben","width","Math","floor","height","y","x","loginBtnClick","enabled","isChecked","setErrorLabel","string","trim","then","localStorage","storeToken","data","getCurrentUser","access_token","storeUser","JSON","stringify","director","loadScene","destroy","match","error_description","replace","setTimeout","onLoad","on","start"],"mappings":"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","file":"Login.js","sourceRoot":"../../../../../assets/scripts/scenes","sourcesContent":["const userService = require('userService');\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        loginlayout: {\n            default: null,\n            type: cc.Node,\n        },\n        error: {\n            default: null,\n            type: cc.Label,\n        },\n        username: {\n            default: null,\n            type: cc.EditBox,\n        },\n        password: {\n            default: null,\n            type: cc.EditBox,\n        },\n        status: {\n            default: null,\n            type: cc.Toggle,\n        },\n        loginbtn: {\n            default: null,\n            type: cc.Button\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n    initLogin(){\n        let login = cc.find('loginlayout', this.node),\n            header = cc.find('header', login),\n            error = cc.find('error', login),\n            username = cc.find('username', login),\n            password = cc.find('password', login),\n            name = cc.find('name', username),\n            pasd = cc.find('pasd', password),\n            nameInput = cc.find('nameeditbox', username),\n            pasdInput = cc.find('passwordeditbox', password),\n            agreement = cc.find('agreement', login),\n            status = cc.find('agreestatus', agreement),\n            agreedetail = cc.find('agreedetail', agreement),\n            buttons = cc.find('buttons', login),\n            loginben = cc.find('loginbtn', buttons);\n        login.width = this.node.width > 900? Math.floor(this.node.width * 0.4) : Math.floor(this.node.width * 0.8);\n        login.height = Math.floor(this.node.height * 0.45);\n        header.y = Math.floor(login.height/2 - header.height/2);\n        error.y = Math.floor(login.height/2 - header.height - error.height);\n        //username\n        username.width = login.width;\n        username.y = Math.floor(login.height/2 - header.height - error.height - username.height);\n        name.x = Math.floor(name.width/2 - username.width/2);\n        nameInput.width = Math.floor(username.width - name.width - 5);\n        nameInput.x = Math.floor(name.width - username.width/2 + nameInput.width/2 + 5);\n        //password\n        password.width = login.width;\n        password.y = Math.floor(login.height/2 - header.height - error.height - username.height - password.height*1.5);\n        pasd.x = Math.floor(pasd.width/2 - password.width/2);\n        pasdInput.width = Math.floor(password.width - name.width - 5);\n        pasdInput.x = Math.floor(name.width - password.width/2 + pasdInput.width/2 + 5);\n        //agreement\n        agreement.width = login.width;\n        agreement.y = Math.floor(login.height/2 - header.height - error.height - username.height - password.height*1.5 - agreement.height*2.5);\n        status.x = Math.floor(status.width/2 - agreement.width/2);\n        agreedetail.x = Math.floor(status.width/2 - agreement.width/2 + agreedetail.width/2 + 15);\n        //buttons\n        buttons.width = login.width;\n        buttons.y = Math.floor(login.height/2 - header.height - error.height - username.height - password.height*1.5 - agreement.height*2.5 - buttons.height * 1.2);\n    },\n    loginBtnClick(){\n        this.loginbtn.enabled = false;\n        if(!this.status.isChecked){\n        this.setErrorLabel('unchecked', null);\n        }else if(this.password.string.trim() == '' || this.username.string.trim() == ''){\n            this.setErrorLabel('account', null);\n        }else{\n            userService.login(this.username.string, this.password.string).then(data=>{\n                localStorage.storeToken(data);\n                userService.getCurrentUser(data.access_token).then(data=>{\n                    this.loginbtn.enabled = true;\n                    localStorage.storeUser(JSON.stringify(data));\n                    cc.director.loadScene(\"Loading\");\n                    this.node.destroy();\n                }, error=>{\n                    this.setErrorLabel('error',error);\n                })\n            }, error=>{\n                this.setErrorLabel('error',error);\n            });\n        }\n        \n    },\n    setErrorLabel(type, error){\n        if(type.match(/uncheck/i)){\n            this.error.string = 'Please check before logging.';\n        }else if(type.match(/account/i)){\n            this.error.string = \"Username/Password is required.\";\n        }else if(type.match(/error/i)){\n            if(error.error_description){\n                this.error.string = error.error_description;\n            }else if(error.error){\n                this.error.string = error.error.replace(/_/g, ' ');\n            }else{\n                this.error.string = 'Something Wrong!';\n            }\n        };\n        setTimeout(()=>{\n            this.loginbtn.enabled = true;\n            this.error.string = ' ';\n        },2000)\n    },\n    onLoad () {\n        this.initLogin();\n        this.loginbtn.node.on('click', this.loginBtnClick, this);\n    },\n\n    start () {\n\n    },\n\n    // update (dt) {},\n});\n"]}