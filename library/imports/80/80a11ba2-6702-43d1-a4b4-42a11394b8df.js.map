{"version":3,"sources":["../../../../../assets/scripts/game/assets/scripts/game/Master.js"],"names":["masters","cc","Class","extends","Component","properties","hotDogPickRadius","masterPickRadius","moveSpeed","setPerfabPosition","min_width","node","width","parent","max_width","index","Math","floor","random","length","pickRadius","find","active","setPosition","randomFrom","height","movePerfab","dt","y","play_height","destroy","pow","getPlayerDistance","playerPos","game","player","getPosition","position","sub","mag","onPicked","target","target_type","children","filter","v","name","setScore","lower","upper","ceil","onLoad","start","update","window","Global","gameIsPlay"],"mappings":";;;;;;AAAA,IAAMA,UAAU,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,CAAhB;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,0BAAiB,CADT;AAERC,0BAAiB,CAFT;AAGRC,mBAAW;AAHH,KAHP;;AASL;AACAC,qBAVK,+BAUc;AAClB,YAAIC,YAAY,KAAKC,IAAL,CAAUC,KAAV,GAAkB,KAAKD,IAAL,CAAUE,MAAV,CAAiBD,KAAjB,GAAuB,CAAzD;AAAA,YACCE,YAAY,KAAKH,IAAL,CAAUE,MAAV,CAAiBD,KAAjB,GAAuB,CAAvB,GAA2B,KAAKD,IAAL,CAAUC,KADlD;AAEG;AACH,YAAIG,QAAQC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBlB,QAAQmB,MAAnC,CAAZ;AACG;AACA,YAAGnB,QAAQe,KAAR,KAAkB,QAArB,EAA8B;AAC1B,iBAAKK,UAAL,GAAkB,KAAKd,gBAAvB;AACH,SAFD,MAEK;AACD,iBAAKc,UAAL,GAAkB,KAAKb,gBAAvB;AACH;AACD;AACHN,WAAGoB,IAAH,CAAQrB,QAAQe,KAAR,CAAR,EAAwB,KAAKJ,IAA7B,EAAmCW,MAAnC,GAA4C,IAA5C;AACG;AACH,aAAKX,IAAL,CAAUY,WAAV,CAAsB,KAAKC,UAAL,CAAgBd,SAAhB,EAA2BI,SAA3B,CAAtB,EAA6D,KAAKH,IAAL,CAAUE,MAAV,CAAiBY,MAAjB,GAAwB,CAAxB,GAA4B,KAAKd,IAAL,CAAUc,MAAnG;AACA,KAzBI;AA0BLC,cA1BK,sBA0BMC,EA1BN,EA0BS;AACV;AACH,YAAG,KAAKhB,IAAL,CAAUiB,CAAV,IAAe,KAAKC,WAAL,GAAmB,KAAKlB,IAAL,CAAUE,MAAV,CAAiBY,MAAjB,GAAwB,CAA7D,EAA+D;AACxD,iBAAKd,IAAL,CAAUmB,OAAV;AACA;AACH,SAHJ,MAGQ;AACD,iBAAKnB,IAAL,CAAUiB,CAAV,IAAe,KAAKpB,SAAL,GAAiBQ,KAAKe,GAAL,CAASJ,EAAT,EAAa,CAAb,CAAhC;AACH;AACJ,KAlCI;AAmCLK,qBAnCK,+BAmCc;AACf,YAAIC,YAAY,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB;AACA,eAAO,KAAKzB,IAAL,CAAU0B,QAAV,CAAmBC,GAAnB,CAAuBL,SAAvB,EAAkCM,GAAlC,EAAP;AACH,KAtCI;AAuCLC,YAvCK,sBAuCK;AACN;AACA,YAAIC,SAAS,KAAK9B,IAAlB;AACA;AACA,YAAI+B,cAAcD,OAAOE,QAAP,CAAgBC,MAAhB,CAAuB;AAAA,mBAAGC,EAAEvB,MAAL;AAAA,SAAvB,EAAoC,CAApC,EAAuCwB,IAAzD;AACA;AACA,aAAKZ,IAAL,CAAUa,QAAV,CAAmBL,WAAnB;AACA;AACA,aAAK/B,IAAL,CAAUmB,OAAV;AACH,KAhDI;AAiDLN,cAjDK,sBAiDMwB,KAjDN,EAiDYC,KAjDZ,EAiDkB;AACnB,eAAQjC,KAAKkC,IAAL,CAAWlC,KAAKE,MAAL,MAAiB+B,QAAQD,KAAzB,IAAkCA,KAA7C,CAAR;AACH,KAnDI;AAoDLG,UApDK,oBAoDK;AACT,aAAK1C,iBAAL;AACG,aAAKW,UAAL;AACH,KAvDI;AAwDLgC,SAxDK,mBAwDI;AACL,aAAKvB,WAAL,GAAmBb,KAAKkC,IAAL,CAAU,KAAKf,MAAL,CAAYV,MAAZ,GAAqBxB,GAAGoB,IAAH,CAAQ,MAAR,EAAgB,KAAKc,MAArB,EAA6BV,MAA5D,IAAoE,CAAvF;AACH,KA1DI;AA4DL4B,UA5DK,kBA4DG1B,EA5DH,EA4DO;AACR,YAAG2B,OAAOC,MAAP,CAAcC,UAAjB,EAA4B;AACxB,iBAAK9B,UAAL,CAAgBC,EAAhB;AACH;AACD,YAAG,KAAKK,iBAAL,KAA2B,KAAKZ,UAAnC,EAA8C;AAC1C,iBAAKoB,QAAL;AACA;AACH;AACJ;AApEI,CAAT","file":"Master.js","sourceRoot":"../../../../../assets/scripts/game","sourcesContent":["const masters = ['stone', 'ghost', 'hotdog'];\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        hotDogPickRadius:0,\n        masterPickRadius:0,\n        moveSpeed: 0,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n    setPerfabPosition(){\n    \tlet min_width = this.node.width - this.node.parent.width/2,\n    \t\tmax_width = this.node.parent.width/2 - this.node.width;\n        //随机生成master\n    \tlet index = Math.floor(Math.random() * masters.length);\n        //依据类型设定master和player之间的距离\n        if(masters[index] == 'hotdog'){\n            this.pickRadius = this.hotDogPickRadius;\n        }else{\n            this.pickRadius = this.masterPickRadius;\n        };\n        //将生成的master的sprite激活\n    \tcc.find(masters[index], this.node).active = true;\n        //随机设置master的位置\n    \tthis.node.setPosition(this.randomFrom(min_width, max_width), this.node.parent.height/2 + this.node.height);\n    },\n    movePerfab(dt){\n        //下落master,如果master将要离开显示区域是销毁\n    \tif(this.node.y <= this.play_height - this.node.parent.height/2){\n            this.node.destroy();\n            return;\n        }else{\n            this.node.y -= this.moveSpeed * Math.pow(dt, 2);\n        }\n    },\n    getPlayerDistance(){\n        let playerPos = this.game.player.getPosition();\n        return this.node.position.sub(playerPos).mag();\n    },\n    onPicked(){\n        //获取与被player picked的节点\n        let target = this.node;\n        //判断master的类型\n        let target_type = target.children.filter(v=>v.active)[0].name;\n        //更细game里计分器的数值\n        this.game.setScore(target_type);\n        //销毁picked的master\n        this.node.destroy();\n    },\n    randomFrom(lower,upper){\n        return  Math.ceil((Math.random() * (upper - lower) + lower));\n    },\n    onLoad () {\n    \tthis.setPerfabPosition();\n        this.pickRadius;\n    },\n    start () {\n        this.play_height = Math.ceil(this.player.height + cc.find('name', this.player).height)/2;\n    },\n\n    update (dt) {\n        if(window.Global.gameIsPlay){\n            this.movePerfab(dt);\n        };\n        if(this.getPlayerDistance() < this.pickRadius){\n            this.onPicked();\n            return;\n        };\n    },\n});\n"]}